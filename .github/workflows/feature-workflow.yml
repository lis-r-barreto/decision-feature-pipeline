name: Feature Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy_feature_store:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          cd decision-feature-pipeline/decision_feature_store
          docker build -t feast-ui .

      - name: Start Feast web service
        run: |
          # Para o container se já estiver rodando
          docker stop feast-ui 2>/dev/null || true
          docker rm feast-ui 2>/dev/null || true
          
          # Inicia o container em background
          docker run -d --name feast-ui -p 8888:8888 --restart=unless-stopped feast-ui
          
          # Aguarda o serviço inicializar
          echo "Aguardando Feast UI inicializar..."
          sleep 30

      - name: Health check - Verificar se Feast está rodando
        run: |
          # Tenta conectar na porta 8888 por até 2 minutos
          timeout=120
          counter=0
          
          while [ $counter -lt $timeout ]; do
            if curl -f http://localhost:8888 > /dev/null 2>&1; then
              echo "✅ Feast UI está rodando e acessível!"
              echo "🌐 Acesse: http://localhost:8888"
              docker ps | grep feast-ui
              exit 0
            fi
            echo "Tentando conectar... ($counter/$timeout segundos)"
            sleep 5
            counter=$((counter + 5))
          done
          
          echo "❌ Feast UI não respondeu após $timeout segundos"
          echo "Logs do container:"
          docker logs feast-ui
          exit 1

      - name: Mostrar informações do serviço
        if: success()
        run: |
          echo "🎉 Feast Web Service está rodando!"
          echo "📍 URL: http://localhost:8888"
          echo "🐳 Container Info:"
          docker ps | grep feast-ui
          echo "🔍 Portas em uso:"
          netstat -tuln | grep :8888 || ss -tuln | grep :8888
